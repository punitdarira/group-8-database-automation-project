name: CI/CD Pipeline for Azure MySQL

on:
  push:
    branches:
      - main

jobs:
  # Stage 1: Environment Setup
  environment-setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup MySQL Client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      # - name: Install Python Dependencies in a Virtual Environment
      #   run: |
      #     python -m pip install --upgrade pip
      #     python -m pip install pymysql mysql-connector-python

  # Stage 2: Initial Schema Deployment
  initial-schema-deployment:
    runs-on: ubuntu-latest
    needs: environment-setup

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy Initial Schema
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD $DB_NAME < sql/create_table.sql

  # Stage 3: Schema Update
  schema-update:
    runs-on: ubuntu-latest
    needs: initial-schema-deployment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Apply Schema Update
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD $DB_NAME < sql/schema_update.sql

  # Stage 4: Data Seeding
  data-seeding:
    runs-on: ubuntu-latest
    needs: schema-update

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Seed Sample Data
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD $DB_NAME < sql/data_seed.sql

  # Stage 5: Concurrent Query Execution
  concurrent-query-execution:
    runs-on: ubuntu-latest
    needs: data-seeding

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Execute Concurrent Queries
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install pymysql mysql-connector-python
          python scripts/multi_thread_queries.py
